<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('partials/head') %>
    <!-- mapbox -->
    <link
      href="https://api.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.css"
      rel="stylesheet"
    />
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.js"></script>

    <title>SocialMap</title>
  </head>
  <body>
    <!-- HEADER:START -->
    <header class="container header">
      <a href="#">
        <img src="/assets/icons/camera.svg" alt="" class="icon" />
      </a>
      <a href="#">
        <img src="/assets/icons/message.svg" alt="" class="icon" />
      </a>
    </header>
    <!-- HEADER:END -->

    <!-- MODE:START -->
    <div class="mode__wrapper">
      <div class="container mode">
        <button id="mode__toggle">
          <img src="/assets/icons/map.svg" alt="" /> <span>Maps</span>
        </button>
      </div>
    </div>
    <!-- MODE:END -->

    <!-- NAVIGATION:START -->
    <%- include('partials/navigation', {active: 'home'}) %>
    <!-- NAVIGATION:END -->

    <!-- MAIN:START -->
    <main class="main">
      <div class="container" id="threads-container"></div>

      <div class="container" id="mapbox-container">
        <div id="map" class="map hidden"></div>
      </div>
    </main>
    <!-- MAIN:END -->

    <script>
      const MAPBOX_TOKEN = '<%= MAPBOX_TOKEN %>';

      const threadsContainer = document.getElementById('threads-container');
      const modeToggler = document.getElementById('mode__toggle');

      modeToggler.addEventListener('click', () => {
        const mapBoxContainer = document.getElementById('map');
        mapBoxContainer.classList.toggle('hidden');
        threadsContainer.classList.toggle('hidden');

        if (!mapBoxContainer.classList.contains('hidden')) {
          modeToggler.getElementsByTagName('img')[0].src =
            '/assets/icons/image.svg';
          modeToggler.getElementsByTagName('span')[0].innerText = 'Home';
          createMapBox();
        } else {
          modeToggler.getElementsByTagName('img')[0].src =
            '/assets/icons/map.svg';
          modeToggler.getElementsByTagName('span')[0].innerText = 'Maps';
        }
      });

      const createMapBox = () => {
        mapboxgl.accessToken = MAPBOX_TOKEN;
        const map = new mapboxgl.Map({
          container: 'map',
          style: 'mapbox://styles/mapbox/streets-v11',
          center: [95.3237559, 5.5482904],
          zoom: 10,
        });

        map.addControl(new mapboxgl.NavigationControl());
      };

      const getThreats = async () => {
        try {
          const response = await fetch('/threads');

          if (response.status !== 200) {
            throw new Error('Failed to fetch');
          }

          const responseJson = await response.json();

          return responseJson.data;
        } catch (error) {
          console.log(error);
          return [];
        }
      };

      const createThreadTemplate = (thread) => {
        return `
        <article class="thread">
          <header class="thread__header">
            <img
              src="https://avatars.dicebear.com/api/avataaars/ewdswjkdslao.svg?b=%23b3f0ff"
              alt=""
              class="thread__avatar"
            />
            <div class="thread__user">
              <span>Guests</span>
              <p>${thread.location || 'in internet'}</p>
            </div>
            <div class="thread__menu">
              <!-- <img src="assets/icons/more-circle.svg" alt="" class="icon" /> -->
            </div>
          </header>
          <div class="thread__body">
            <img
              src="${thread.picture_url}"
              alt=""
              class="thread__picture"
            />

            <p class="thread__caption truncate">
              ${thread.caption}
            </p>
            <!-- <span class="read-caption">Read more</span> -->
          </div>
          <div class="thread__footer">
            <div>
              <img src="/assets/icons/heart.svg" alt="" class="icon" />
              <img src="/assets/icons/chat.svg" alt="" class="icon" />
            </div>
            <div>
              <img src="/assets/icons/bookmark.svg" alt="" class="icon" />
            </div>
          </div>
        </article>
        `;
      };

      const init = async () => {
        const { threads } = await getThreats();
        let template = '';
        threads.forEach((thread) => {
          template += createThreadTemplate(thread);
        });

        threadsContainer.innerHTML = template;
      };

      init();
    </script>
  </body>
</html>
